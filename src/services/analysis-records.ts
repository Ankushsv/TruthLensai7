// This is an autogenerated file from Firebase Studio.
'use server';

// In a real application, you would use a database like Firestore or a SQL database.
// For this prototype, we'll use an in-memory array.

export type AnalysisRecord = {
    id: string;
    content: string;
    credibilityScore: number;
    explanation: string;
    flags: string[];
    sourcesChecked: string[];
    factCheckReferences: string[];
    createdAt: string;
};

const analysisRecords: AnalysisRecord[] = [];

export async function createAnalysisRecord(data: Omit<AnalysisRecord, 'id' | 'createdAt'>): Promise<AnalysisRecord> {
    const newRecord: AnalysisRecord = {
        ...data,
        id: `analysis-${Date.now()}-${Math.random().toString(36).substring(2, 9)}`,
        createdAt: new Date().toISOString(),
    };
    analysisRecords.unshift(newRecord); // Add to the beginning of the array
    
    // Keep only the last 100 records for this in-memory example
    if (analysisRecords.length > 100) {
        analysisRecords.pop();
    }
    
    return newRecord;
}

export async function getAnalysisById(id: string): Promise<AnalysisRecord | null> {
    const record = analysisRecords.find(r => r.id === id);
    return record || null;
}

export async function getRecentAnalyses(limit: number = 10): Promise<AnalysisRecord[]> {
    return analysisRecords.slice(0, limit);
}
